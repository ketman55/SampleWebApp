plugins {
	id 'org.springframework.boot' version '2.1.6.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: 'jacoco'

group = 'com.lab.app.ketman'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// for using web service
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// for using @Data annotation
	compileOnly 'org.projectlombok:lombok:1.18.8'
	annotationProcessor 'org.projectlombok:lombok:1.18.8'

	// for development
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// for test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompile "org.codehaus.groovy:groovy-all:2.4.15"
	testCompile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
	testCompile "org.spockframework:spock-core:1.1-groovy-2.4"

	// for documentation
	compile "io.springfox:springfox-swagger2:2.9.2"
	compile 'io.springfox:springfox-swagger-ui:2.9.2'  // Swagger UIを利用するため
}

// CircleCIでレポートを出すためにxml出力をEnableにする
jacocoTestReport {
	group = "Reporting"
	description = "Generate Jacoco coverage reports after running tests."
	additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
	reports {
		xml.enabled = true
		html.enabled = true		// ローカルでも試せるようにHTMLも出力する
		sourceSets sourceSets.main
	}
}


// JarでWebサーバへ配置する
jar {
	manifest {
		attributes 'Main-Class': 'com.lab.app.ketman.SampleWebAppApplication'
	}
}
